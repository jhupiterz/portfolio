[{"categories":["documentation"],"content":"Découvrez en quoi consiste le thème Hugo - LoveIt et les concepts fondamentaux qui le sous-tendent.","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"Découvrez en quoi consiste le thème Hugo - LoveIt et les concepts fondamentaux qui le sous-tendent. Avertissement Sorry, this article has not been completely translated into French. Welcome to take the time to propose a translation by  making a PR to the theme! ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:0:0","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"1 Requirements Thanks to the simplicity of Hugo, Hugo is the only dependency of this theme. Just install latest version of  Hugo (\u003e 0.62.0) for your OS (Windows, Linux, macOS). Why not support earlier versions of Hugo? Since Markdown Render Hooks was introduced in the Hugo Christmas Edition, this theme only supports Hugo versions above 0.62.0. Hugo extended version is recommended Since some features of this theme need to processes  SCSS to  CSS, it is recommended to use Hugo extended version for better experience. ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:1:0","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"2 Installation The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners. ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:2:0","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.1 Create Your Project Hugo provides a new command to create a new website: hugo new site my_website cd my_website ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:2:1","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.2 Install the Theme The LoveIt theme’s repository is: https://github.com/dillonzq/LoveIt. You can download the latest release  .zip file of the theme and extract it in the themes directory. Alternatively, clone this repository to the themes directory: git clone https://github.com/dillonzq/LoveIt.git themes/LoveIt Or, create an empty git repository and make this repository a submodule of your site directory: git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:2:2","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.3 Basic Configuration The following is a basic configuration for the LoveIt theme: baseURL = \"http://example.org/\" # [en, zh-cn, fr, ...] determines default content language defaultContentLanguage = \"en\" # language code languageCode = \"en\" title = \"My New Hugo Site\" # Change the default theme to be use when building the site with Hugo theme = \"LoveIt\" [params] # LoveIt theme version version = \"0.2.X\" [menu] [[menu.main]] identifier = \"posts\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" name = \"Posts\" url = \"/posts/\" # title will be shown when you hover on this menu link title = \"\" weight = 1 [[menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" weight = 2 [[menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" weight = 3 # Markup related configuration in Hugo [markup] # Syntax Highlighting (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false is a necessary configuration (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false Remarque When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (config.toml) and set the theme as the default. ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:2:3","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.4 Create Your First Post Here is the way to create your first post: hugo new posts/first_post.md Feel free to edit the post file by adding some sample content and replacing the title value in the beginning of the file. Remarque By default all posts and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata, set the property draft: false or add -D/--buildDrafts parameter to hugo command. ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:2:4","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.5 Launching the Website Locally Launch by using the following command: hugo serve Go to http://localhost:1313. Basic configuration previewBasic configuration preview \" Basic configuration preview Astuces When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. Remarque Since the theme use .Scratch in Hugo to implement some features, it is highly recommended that you add --disableFastRender parameter to hugo server command for the live preview of the page you are editing. hugo serve --disableFastRender ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:2:5","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.6 Build the Website When your site is ready to deploy, run the following command: hugo A public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server. Astuces The website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use AWS Amplify, Github pages, Render and more… ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:2:6","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"3 Configuration ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:3:0","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.1 Site Configuration In addition to Hugo global configuration and menu configuration, LoveIt lets you define the following parameters in your site configuration (here is a config.toml, whose values are default). Please open the code block below to view the complete sample configuration : [params] # LoveIt theme version version = \"0.2.X\" # site description description = \"This is My New Hugo Site\" # site keywords keywords = [\"Theme\", \"Hugo\"] # site default theme (\"light\", \"dark\", \"auto\") defaultTheme = \"auto\" # public git repo url only then enableGitInfo is true gitRepo = \"\" # which hash function used for SRI, when empty, no SRI is used # (\"sha256\", \"sha384\", \"sha512\", \"md5\") fingerprint = \"\" # date format dateFormat = \"2006-01-02\" # website images for Open Graph and Twitter Cards images = [\"/logo.png\"] # App icon config [params.app] # optional site title override for the app when added to an iOS home screen or Android launcher title = \"LoveIt\" # whether to omit favicon resource links noFavicon = false # modern SVG favicon to use in place of older style .png and .ico files svgFavicon = \"\" # Android browser theme color themeColor = \"#ffffff\" # Safari mask icon color iconColor = \"#5bbad5\" # Windows v8-10 tile color tileColor = \"#da532c\" # Search config [params.search] enable = true # type of search engine (\"lunr\", \"algolia\") type = \"lunr\" # max index length of the chunked content contentLength = 4000 # placeholder of the search bar placeholder = \"\" # max number of results length maxResultLength = 10 # snippet length of the result snippetLength = 30 # HTML tag name of the highlight part in results highlightTag = \"em\" # whether to use the absolute URL based on the baseURL in search index absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" # Header config [params.header] # desktop header mode (\"fixed\", \"normal\", \"auto\") desktopMode = \"fixed\" # mobile header mode (\"fixed\", \"normal\", \"auto\") mobileMode = \"auto\" # Header title config [params.header.title] # URL of the LOGO logo = \"\" # title name name = \"\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" # whether to use typeit animation for title name typeit = false # Footer config [params.footer] enable = true # Custom content (HTML format is supported) custom = '' # whether to show Hugo and theme info hugo = true # whether to show copyright info copyright = true # whether to show the author author = true # Site creation time since = 2019 # ICP info only in China (HTML format is supported) icp = \"\" # license info (HTML format is supported) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # Section (all posts) page config [params.section] # special amount of posts in each section page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # List (category or tag) page config [params.list] # special amount of posts in each list page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # Home page config [params.home] # amount of RSS pages rss = 10 # Home page profile [params.home.profile] enable = true # Gravatar Email for preferred avatar in home page gravatarEmail = \"\" # URL of avatar shown in home page avatarURL = \"/images/avatar.png\" # title shown in home page (HTML format is supported) title = \"\" # subtitle shown in home page subtitle = \"This is My New Hugo Site\" # whether to use typeit animation for subtitle typeit = true # whether to show social links social = true # disclaimer (HTML format is supported) disclaimer = \"\" # Home page posts [params.home.posts] enable = true # special amount of posts in each home posts page paginate = 6 # replaced with hiddenFromHomePage in params.page # default behavior when you don't set ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:3:1","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.2 Favicons, Browserconfig, Manifest It is recommended to put your own favicons: apple-touch-icon.png (180x180) favicon-32x32.png (32x32) favicon-16x16.png (16x16) mstile-150x150.png (150x150) android-chrome-192x192.png (192x192) android-chrome-512x512.png (512x512) into /static. They’re easily created via https://realfavicongenerator.net/. Customize browserconfig.xml and site.webmanifest to set theme-color and background-color. ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:3:2","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.3 Style Customization Remarque Hugo extended version is necessary for the style customization. LoveIt theme has been built to be as configurable as possible by defining custom .scss style files. The directory including the custom .scss style files is assets/css relative to your project root directory. In assets/css/_override.scss, you can override the variables in themes/LoveIt/assets/css/_variables.scss to customize the style. Here is a example: @import url('https://fonts.googleapis.com/css?family=Fira+Mono:400,700\u0026display=swap\u0026subset=latin-ext'); $code-font-family: Fira Mono, Source Code Pro, Menlo, Consolas, Monaco, monospace; In assets/css/_custom.scss, you can add some css style code to customize the style. ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:3:3","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"4 Multilingual and i18n LoveIt theme is fully compatible with Hugo multilingual mode, which provides in-browser language switching. Language SwitchLanguage Switch \" Language Switch ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:4:0","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.1 Compatibility Language Hugo Code HTML lang Attribute Theme Docs Lunr.js Support English en en Simplified Chinese zh-cn zh-CN French fr fr Polish pl pl Brazilian Portuguese pt-br pt-BR Italian it it Spanish es es German de de German de de Serbian sr sr Russian ru ru Romanian ro ro Vietnamese vi vi ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:4:1","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.2 Basic Configuration After learning how Hugo handle multilingual websites, define your languages in your site configuration. For example with English, Chinese and French website: # [en, zh-cn, fr, pl, ...] determines default content language defaultContentLanguage = \"en\" [languages] [languages.en] weight = 1 title = \"My New Hugo Site\" languageCode = \"en\" languageName = \"English\" [[languages.en.menu.main]] identifier = \"posts\" pre = \"\" post = \"\" name = \"Posts\" url = \"/posts/\" title = \"\" weight = 1 [[languages.en.menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" weight = 2 [[languages.en.menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" weight = 3 [languages.zh-cn] weight = 2 title = \"我的全新 Hugo 网站\" # language code, CN only here languageCode = \"zh-CN\" languageName = \"简体中文\" # whether to include Chinese/Japanese/Korean hasCJKLanguage = true [[languages.zh-cn.menu.main]] identifier = \"posts\" pre = \"\" post = \"\" name = \"文章\" url = \"/posts/\" title = \"\" weight = 1 [[languages.zh-cn.menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" weight = 2 [[languages.zh-cn.menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" weight = 3 [languages.fr] weight = 3 title = \"Mon nouveau site Hugo\" languageCode = \"fr\" languageName = \"Français\" [[languages.fr.menu.main]] identifier = \"posts\" pre = \"\" post = \"\" name = \"Postes\" url = \"/posts/\" title = \"\" weight = 1 [[languages.fr.menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"Balises\" url = \"/tags/\" title = \"\" weight = 2 [[languages.fr.menu.main]] identifier = \"categories\" name = \"Catégories\" pre = \"\" post = \"\" url = \"/categories/\" title = \"\" weight = 3 Then, for each new page, append the language code to the file name. Single file my-page.md is split in three files: in English: my-page.en.md in Chinese: my-page.zh-cn.md in French: my-page.fr.md Remarque Be aware that only translated pages are displayed in menu. It’s not replaced with default language content. Astuces Use Front Matter parameter to translate urls too. ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:4:2","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.3 Overwrite Translation Strings Translations strings are used for common default values used in the theme. Translations are available in some languages, but you may use another language or want to override default values. To override these values, create a new file in your local i18n folder i18n/\u003clanguageCode\u003e.toml and inspire yourself from themes/LoveIt/i18n/en.toml. By the way, as these translations could be used by other people, please take the time to propose a translation by  making a PR to the theme! ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:4:3","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"5 Search Based on Lunr.js or algolia, searching is supported in LoveIt theme. ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:5:0","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"5.1 Output Configuration In order to generate index.json for searching, add JSON output file type to the home of the outputs part in your site configuration. [outputs] home = [\"HTML\", \"RSS\", \"JSON\"] ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:5:1","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"5.2 Search Configuration Based on index.json generated by Hugo, you could activate searching. Here is the search configuration in your site configuration: [params.search] enable = true # type of search engine (\"lunr\", \"algolia\") type = \"lunr\" # max index length of the chunked content contentLength = 4000 # placeholder of the search bar placeholder = \"\" # max number of results length maxResultLength = 10 # snippet length of the result snippetLength = 30 # HTML tag name of the highlight part in results highlightTag = \"em\" # whether to use the absolute URL based on the baseURL in search index absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" How to choose search engine? The following is a comparison of two search engines: lunr: simple, no need to synchronize index.json, no limit for contentLength, but high bandwidth and low performance (Especially for Chinese which needs a large segmentit library) algolia: high performance and low bandwidth, but need to synchronize index.json and limit for contentLength The content of the post is separated by h2 and h3 HTML tag to improve query performance and basically implement full-text search. contentLength is used to limit the max index length of the part starting with h2 and h3 HTML tag. Tips about algolia You need to upload index.json files to algolia to activate searching. You could upload the index.json files by browsers but a CLI tool may be better. Algolia Atomic is a good choice. To be compatible with Hugo multilingual mode, you need to upload different index.json for each language to the different index of algolia, such as zh-cn/index.json or fr/index.json… ","date":"2020-03-06","objectID":"/julie-hartz/fr/theme-documentation-basics/:5:2","tags":["installation","configuration"],"title":"Thème Documentation - Concepts de Base","uri":"/julie-hartz/fr/theme-documentation-basics/"},{"categories":["documentation"],"content":"Hugo fournit plusieurs shortcodes intégrés pour la commodité de l'auteur et pour garder votre contenu de démarque propre.","date":"2020-03-04","objectID":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/","tags":["shortcodes"],"title":"Thème Documentation - Built-in Shortcodes","uri":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"Hugo fournit plusieurs shortcodes intégrés pour la commodité de l’auteur et pour garder votre contenu de démarque propre. Avertissement Sorry, this article has not been completely translated into French. Welcome to take the time to propose a translation by  making a PR to the theme! Hugo uses Markdown for its simple content format. However, there are a lot of things that Markdown doesn’t support well. You could use pure HTML to expand possibilities. But this happens to be a bad idea. Everyone uses Markdown because it’s pure and simple to read even non-rendered. You should avoid HTML to keep it as simple as possible. To avoid this limitations, Hugo created shortcodes. A shortcode is a simple snippet that can generate reasonable HTML code and conforms to Markdown’s design philosophy. Hugo ships with a set of predefined shortcodes that represent very common usage. These shortcodes are provided for author convenience and to keep your markdown content clean. ","date":"2020-03-04","objectID":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/:0:0","tags":["shortcodes"],"title":"Thème Documentation - Built-in Shortcodes","uri":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"1 figure Documentation of figure Example figure input: {{\u003c figure src=\"/images/lighthouse.jpg\" title=\"Lighthouse (figure)\" \u003e}} The rendered output looks like this: Lighthouse (figure) The HTML looks like this: \u003cfigure\u003e \u003cimg src=\"/images/lighthouse.jpg\"/\u003e \u003cfigcaption\u003e \u003ch4\u003eLighthouse (figure)\u003c/h4\u003e \u003c/figcaption\u003e \u003c/figure\u003e ","date":"2020-03-04","objectID":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/:1:0","tags":["shortcodes"],"title":"Thème Documentation - Built-in Shortcodes","uri":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"2 gist Documentation of gist Example gist input: {{\u003c gist spf13 7896402 \u003e}} The rendered output looks like this: The HTML looks like this: \u003cscript type=\"application/javascript\" src=\"https://gist.github.com/spf13/7896402.js\"\u003e\u003c/script\u003e ","date":"2020-03-04","objectID":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/:2:0","tags":["shortcodes"],"title":"Thème Documentation - Built-in Shortcodes","uri":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"3 highlight Documentation of highlight Example highlight input: {{\u003c highlight html \u003e}} \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e {{\u003c /highlight \u003e}} The rendered output looks like this: \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e ","date":"2020-03-04","objectID":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/:3:0","tags":["shortcodes"],"title":"Thème Documentation - Built-in Shortcodes","uri":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"4 instagram Documentation of instagram Example instagram input: {{\u003c instagram BWNjjyYFxVx hidecaption \u003e}} The rendered output looks like this: ","date":"2020-03-04","objectID":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/:4:0","tags":["shortcodes"],"title":"Thème Documentation - Built-in Shortcodes","uri":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"5 param Documentation of param Example param input: {{\u003c param description \u003e}} The rendered output looks like this: Hugo fournit plusieurs shortcodes intégrés pour la commodité de l'auteur et pour garder votre contenu de démarque propre. ","date":"2020-03-04","objectID":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/:5:0","tags":["shortcodes"],"title":"Thème Documentation - Built-in Shortcodes","uri":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"6 ref and relref Documentation of ref and relref ","date":"2020-03-04","objectID":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/:6:0","tags":["shortcodes"],"title":"Thème Documentation - Built-in Shortcodes","uri":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"7 tweet Documentation of tweet Example tweet input: {{\u003c tweet 877500564405444608 \u003e}} The rendered output looks like this: Hugo 0.24 Released: Big archetype update + @Netlify _redirects etc. file supporthttps://t.co/X94FmYDEZJ #gohugo #golang @spf13 @bepsays — GoHugo.io (@GoHugoIO) June 21, 2017 ","date":"2020-03-04","objectID":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/:7:0","tags":["shortcodes"],"title":"Thème Documentation - Built-in Shortcodes","uri":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"8 vimeo Documentation of vimeo Example vimeo input: {{\u003c vimeo 146022717 \u003e}} The rendered output looks like this: ","date":"2020-03-04","objectID":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/:8:0","tags":["shortcodes"],"title":"Thème Documentation - Built-in Shortcodes","uri":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"9 youtube Documentation of youtube Example youtube input: {{\u003c youtube w7Ft2ymGmfc \u003e}} The rendered output looks like this: ","date":"2020-03-04","objectID":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/:9:0","tags":["shortcodes"],"title":"Thème Documentation - Built-in Shortcodes","uri":"/julie-hartz/fr/theme-documentation-built-in-shortcodes/"},{"categories":["documentation"],"content":"Le thème LoveIt fournit plusieurs shortcodes en plus de ceux intégrés dans Hugo.","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"Le thème LoveIt fournit plusieurs shortcodes en plus de ceux intégrés dans Hugo. Avertissement Sorry, this article has not been completely translated into French. Welcome to take the time to propose a translation by  making a PR to the theme! ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:0:0","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"1 style Remarque Hugo extended version is necessary for style shortcode. style is a shortcode to insert custom style in your post. The style shortcode has two positional parameters. The first one is the custom style content, which supports nesting syntax in  SASS and \u0026 referring to this parent HTML element. And the second one is the tag name of the HTML element wrapping the content you want to change style, and whose default value is div. Example style input: {{\u003c style \"text-align:right; strong{color:#00b1ff;}\" \u003e}} This is a **right-aligned** paragraph. {{\u003c /style \u003e}} The rendered output looks like this: This is a right-aligned paragraph. ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:1:0","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"2 link link shortcode is an alternative to Markdown link syntax. link shortcode can provide some other features and can be used in code blocks. The complete usage of local resource references is supported. The link shortcode has the following named parameters: href [required] (first positional parameter) Destination of the link. content [optional] (second positional parameter) Content of the link, default value is the value of href parameter. Markdown or HTML format is supported. title [optional] (third positional parameter) title attribute of the HTML a tag, which will be shown when hovering on the link. class [optional] class attribute of the HTML a tag. rel [optional] Additional rel attributes of the HTML a tag. Example link input: {{\u003c link \"https://assemble.io\" \u003e}} Or {{\u003c link href=\"https://assemble.io\" \u003e}} {{\u003c link \"mailto:contact@revolunet.com\" \u003e}} Or {{\u003c link href=\"mailto:contact@revolunet.com\" \u003e}} {{\u003c link \"https://assemble.io\" Assemble \u003e}} Or {{\u003c link href=\"https://assemble.io\" content=Assemble \u003e}} The rendered output looks like this: https://assemble.io mailto:contact@revolunet.com Assemble Example link input with a title: {{\u003c link \"https://github.com/upstage/\" Upstage \"Visit Upstage!\" \u003e}} Or {{\u003c link href=\"https://github.com/upstage/\" content=Upstage title=\"Visit Upstage!\" \u003e}} The rendered output looks like this (hover over the link, there should be a tooltip): Upstage ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:2:0","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"3 image image shortcode is an alternative to figure shortcode. image shortcode can take full advantage of the dependent libraries of lazysizes and lightgallery.js. The complete usage of local resource references is supported. The image shortcode has the following named parameters: src [required] (first positional parameter) URL of the image to be displayed. alt [optional] (second positional parameter) Alternate text for the image if the image cannot be displayed, default value is the value of src parameter. Markdown or HTML format is supported. caption [optional] (third positional parameter) Image caption. Markdown or HTML format is supported. title [optional] Image title that will be shown when hovering on the image. class [optional] class attribute of the HTML figure tag. src_s [optional] URL of the image thumbnail, used for lightgallery, default value is the value of src parameter. src_l [optional] URL of the HD image, used for lightgallery, default value is the value of src parameter. height [optional] height attribute of the image. width [optional] width attribute of the image. linked [optional] Whether the image needs to be hyperlinked, default value is true. rel [optional] Additional rel attributes of the HTML a tag, if linked parameter is set to true. Example image input: {{\u003c image src=\"/images/lighthouse.jpg\" caption=\"Lighthouse (`image`)\" src_s=\"/images/lighthouse-small.jpg\" src_l=\"/images/lighthouse-large.jpg\" \u003e}} The rendered output looks like this: Lighthouse (image)\" Lighthouse (image) ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:3:0","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"4 admonition The admonition shortcode supports 12 types of banners to help you put notice in your page. Markdown or HTML format in the content is supported. Remarque A note banner Abstrait An abstract banner Info A info banner Astuces A tip banner Succès A success banner Question A question banner Avertissement A warning banner Échec A failure banner Danger A danger banner Bug A bug banner Exemple An example banner Citation A quote banner The admonition shortcode has the following named parameters: type [optional] (first positional parameter) Type of the admonition banner, default value is note. title [optional] (second positional parameter) Title of the admonition banner, default value is the value of type parameter. open [optional] (third positional parameter) Whether the content will be expandable by default, default value is true. Example admonition input: {{\u003c admonition type=tip title=\"This is a tip\" open=false \u003e}} A **tip** banner {{\u003c /admonition \u003e}} Or {{\u003c admonition tip \"This is a tip\" false \u003e}} A **tip** banner {{\u003c /admonition \u003e}} The rendered output looks like this: This is a tip A tip banner ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:4:0","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"5 mermaid mermaid is a library helping you to generate diagram and flowcharts from text, in a similar manner as Markdown. Just insert your mermaid code in the mermaid shortcode and that’s it. ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:5:0","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"5.1 Flowchart Example flowchart mermaid input: {{\u003c mermaid \u003e}} graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] {{\u003c /mermaid \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:5:1","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"5.2 Sequence Diagram Example sequence diagram mermaid input: {{\u003c mermaid \u003e}} sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr/\u003eprevail... John--\u003eAlice: Great! John-\u003eBob: How about you? Bob--\u003eJohn: Jolly good! {{\u003c /mermaid \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:5:2","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"5.3 GANTT Example GANTT mermaid input: {{\u003c mermaid \u003e}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{\u003c /mermaid \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:5:3","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"5.4 Class Diagram Example class diagram mermaid input: {{\u003c mermaid \u003e}} classDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label {{\u003c /mermaid \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:5:4","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"5.5 State Diagram Example state diagram mermaid input: {{\u003c mermaid \u003e}} stateDiagram [*] --\u003e Still Still --\u003e [*] Still --\u003e Moving Moving --\u003e Still Moving --\u003e Crash Crash --\u003e [*] {{\u003c /mermaid \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:5:5","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"5.6 Git Graph Example git graph mermaid input: {{\u003c mermaid \u003e}} gitGraph: options { \"nodeSpacing\": 100, \"nodeRadius\": 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch {{\u003c /mermaid \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:5:6","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"5.7 Pie Example pie mermaid input: {{\u003c mermaid \u003e}} pie \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 15 {{\u003c /mermaid \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:5:7","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"6 echarts ECharts is a library helping you to generate interactive data visualization. The basic chart types ECharts supports include line series, bar series, scatter series, pie charts, candle-stick series, boxplot series for statistics, map series, heatmap series, lines series for directional information, graph series for relationships, treemap series, sunburst series, parallel series for multi-dimensional data, funnel series, gauge series. And it’s extremely easy to create a combinition of them with ECharts. Just insert your ECharts option in JSON/YAML/TOML format in the echarts shortcode and that’s it. Example echarts input in JSON format: {{\u003c echarts \u003e}} { \"title\": { \"text\": \"Summary Line Chart\", \"top\": \"2%\", \"left\": \"center\" }, \"tooltip\": { \"trigger\": \"axis\" }, \"legend\": { \"data\": [\"Email Marketing\", \"Affiliate Advertising\", \"Video Advertising\", \"Direct View\", \"Search Engine\"], \"top\": \"10%\" }, \"grid\": { \"left\": \"5%\", \"right\": \"5%\", \"bottom\": \"5%\", \"top\": \"20%\", \"containLabel\": true }, \"toolbox\": { \"feature\": { \"saveAsImage\": { \"title\": \"Save as Image\" } } }, \"xAxis\": { \"type\": \"category\", \"boundaryGap\": false, \"data\": [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"] }, \"yAxis\": { \"type\": \"value\" }, \"series\": [ { \"name\": \"Email Marketing\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [120, 132, 101, 134, 90, 230, 210] }, { \"name\": \"Affiliate Advertising\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [220, 182, 191, 234, 290, 330, 310] }, { \"name\": \"Video Advertising\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [150, 232, 201, 154, 190, 330, 410] }, { \"name\": \"Direct View\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [320, 332, 301, 334, 390, 330, 320] }, { \"name\": \"Search Engine\", \"type\": \"line\", \"stack\": \"Total\", \"data\": [820, 932, 901, 934, 1290, 1330, 1320] } ] } {{\u003c /echarts \u003e}} The same in YAML format: {{\u003c echarts \u003e}}title:text:Summary Line Charttop:2%left:centertooltip:trigger:axislegend:data:- Email Marketing- Affiliate Advertising- Video Advertising- Direct View- Search Enginetop:10%grid:left:5%right:5%bottom:5%top:20%containLabel:truetoolbox:feature:saveAsImage:title:Save as ImagexAxis:type:categoryboundaryGap:falsedata:- Monday- Tuesday- Wednesday- Thursday- Friday- Saturday- SundayyAxis:type:valueseries:- name:Email Marketingtype:linestack:Totaldata:- 120- 132- 101- 134- 90- 230- 210- name:Affiliate Advertisingtype:linestack:Totaldata:- 220- 182- 191- 234- 290- 330- 310- name:Video Advertisingtype:linestack:Totaldata:- 150- 232- 201- 154- 190- 330- 410- name:Direct Viewtype:linestack:Totaldata:- 320- 332- 301- 334- 390- 330- 320- name:Search Enginetype:linestack:Totaldata:- 820- 932- 901- 934- 1290- 1330- 1320{{\u003c /echarts \u003e}} The same in TOML format: {{\u003c echarts \u003e}} [title] text = \"Summary Line Chart\" top = \"2%\" left = \"center\" [tooltip] trigger = \"axis\" [legend] data = [ \"Email Marketing\", \"Affiliate Advertising\", \"Video Advertising\", \"Direct View\", \"Search Engine\" ] top = \"10%\" [grid] left = \"5%\" right = \"5%\" bottom = \"5%\" top = \"20%\" containLabel = true [toolbox] [toolbox.feature] [toolbox.feature.saveAsImage] title = \"Save as Image\" [xAxis] type = \"category\" boundaryGap = false data = [ \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\" ] [yAxis] type = \"value\" [[series]] name = \"Email Marketing\" type = \"line\" stack = \"Total\" data = [ 120.0, 132.0, 101.0, 134.0, 90.0, 230.0, 210.0 ] [[series]] name = \"Affiliate Advertising\" type = \"line\" stack = \"Total\" data = [ 220.0, 182.0, 191.0, 234.0, 290.0, 330.0, 310.0 ] [[series]] name = \"Video Advertising\" type = \"line\" stack = \"Total\" data = [ 150.0, 232.0, 201.0, 154.0, 190.0, 330.0, 410.0 ] [[series]] name = \"Direct View\" type = \"line\" stack = \"Total\" data = [ 320.0, 332.0, 301.0, 334.0, 390.0, 330.0, 320.0 ] [[series]] name = \"Search Engine\" type = \"line\" stack = \"Total\" data = [ 820.0, 932.0, 901.0, 934.0, 1290.0, 1330.0, 1320.0 ] {{\u003c /echarts \u003e}} The rendered output looks like this: The echarts shortcode has also","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:6:0","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"7 mapbox Mapbox GL JS is a JavaScript library that uses WebGL to render interactive maps from vector tiles and Mapbox styles. The mapbox shortcode has the following named parameters to use Mapbox GL JS: lng [required] (first positional parameter) Longitude of the inital centerpoint of the map, measured in degrees. lat [required] (second positional parameter) Latitude of the inital centerpoint of the map, measured in degrees. zoom [optional] (third positional parameter) The initial zoom level of the map, default value is 10. marked [optional] (fourth positional parameter) Whether to add a marker at the inital centerpoint of the map, default value is true. light-style [optional] (fifth positional parameter) Style for the light theme, default value is the value set in the front matter or the site configuration. dark-style [optional] (sixth positional parameter) Style for the dark theme, default value is the value set in the front matter or the site configuration. navigation [optional] Whether to add NavigationControl, default value is the value set in the front matter or the site configuration. geolocate [optional] Whether to add GeolocateControl, default value is the value set in the front matter or the site configuration. scale [optional] Whether to add ScaleControl, default value is the value set in the front matter or the site configuration. fullscreen [optional] Whether to add FullscreenControl, default value is the value set in the front matter or the site configuration. width [optional] Width of the map, default value is 100%. height [optional] Height of the map, default value is 20rem. Example simple mapbox input: {{\u003c mapbox 121.485 31.233 12 \u003e}} Or {{\u003c mapbox lng=121.485 lat=31.233 zoom=12 \u003e}} The rendered output looks like this: Example mapbox input with the custom style: {{\u003c mapbox -122.252 37.453 10 false \"mapbox://styles/mapbox/navigation-preview-day-v4\" \"mapbox://styles/mapbox/navigation-preview-night-v4\" \u003e}} Or {{\u003c mapbox lng=-122.252 lat=37.453 zoom=10 marked=false light-style=\"mapbox://styles/mapbox/navigation-preview-day-v4\" dark-style=\"mapbox://styles/mapbox/navigation-preview-night-v4\" \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:7:0","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"8 music The music shortcode embeds a responsive music player based on APlayer and MetingJS. There are three ways to use it the music shortcode. ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:8:0","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"8.1 Custom Music URL The complete usage of local resource references is supported. The music shortcode has the following named parameters by custom music URL: server [required] URL of the custom music. name [optional] Name of the custom music. artist [optional] Artist of the custom music. cover [required] URL of the custom music cover. Example music input by custom music URL: {{\u003c music url=\"/music/Wavelength.mp3\" name=Wavelength artist=oldmanyoung cover=\"/images/Wavelength.jpg\" \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:8:1","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"8.2 Music Platform URL Automatic Identification The music shortcode has one named parameter by music platform URL automatic identification: auto [required] (first positional parameter) URL of the music platform URL for automatic identification, which supports netease, tencent and xiami music platform. Example music input by music platform URL automatic identification: {{\u003c music auto=\"https://music.163.com/#/playlist?id=60198\" \u003e}} Or {{\u003c music \"https://music.163.com/#/playlist?id=60198\" \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:8:2","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"8.3 Custom Server, Type and ID The music shortcode has the following named parameters by custom music platform: server [required] (first positional parameter) [netease, tencent, kugou, xiami, baidu] Music platform. type [required] (second positional parameter) [song, playlist, album, search, artist] Type of the music. id [required] (third positional parameter) Song ID, or playlist ID, or album ID, or search keyword, or artist ID. Example music input by custom music platform: {{\u003c music server=\"netease\" type=\"song\" id=\"1868553\" \u003e}} Or {{\u003c music netease song 1868553 \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:8:3","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"8.4 Other Parameters The music shortcode has other named parameters applying to the above three ways: theme [optional] Main color of the music player, default value is #448aff. fixed [optional] Whether to enable fixed mode, default value is false. mini [optional] Whether to enable mini mode, default value is false. autoplay [optional] Whether to autoplay music, default value is false. volume [optional] Default volume when the player is first opened, which will be remembered in the browser, default value is 0.7. mutex [optional] Whether to pause other players when this player starts playing, default value is true. The music shortcode has the following named parameters only applying to the type of music list: loop [optional] [all, one, none] Loop mode of the music list, default value is none. order [optional] [list, random] Play order of the music list, default value is list. list-folded [optional] Whether the music list should be folded at first, default value is false. list-max-height [optional] Max height of the music list, default value is 340px. ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:8:4","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"9 bilibili The bilibili shortcode embeds a responsive video player for bilibili videos. When the video only has one part, only the BV id of the video is required, e.g.: https://www.bilibili.com/video/BV1Sx411T7QQ Example bilibili input: {{\u003c bilibili BV1Sx411T7QQ \u003e}} Or {{\u003c bilibili id=BV1Sx411T7QQ \u003e}} The rendered output looks like this: When the video has multiple parts, in addition to the BV id of the video, p is also required, whose default value is 1, e.g.: https://www.bilibili.com/video/BV1TJ411C7An?p=3 Example bilibili input with p: {{\u003c bilibili BV1TJ411C7An 3 \u003e}} Or {{\u003c bilibili id=BV1TJ411C7An p=3 \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:9:0","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"10 typeit The typeit shortcode provides typing animation based on TypeIt. Just insert your content in the typeit shortcode and that’s it. ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:10:0","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"10.1 Simple Content Simple content is allowed in Markdown format and without rich block content such as images and more… Example typeit input: {{\u003c typeit \u003e}} This is a *paragraph* with **typing animation** based on [TypeIt](https://typeitjs.com/)... {{\u003c /typeit \u003e}} The rendered output looks like this: Alternatively, you can use custom HTML tags. Example typeit input with h4 tag: {{\u003c typeit tag=h4 \u003e}} This is a *paragraph* with **typing animation** based on [TypeIt](https://typeitjs.com/)... {{\u003c /typeit \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:10:1","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"10.2 Code Content Code content is allowed and will be highlighted by named parameter code for the type of code language. Example typeit input with code: {{\u003c typeit code=java \u003e}} public class HelloWorld { public static void main(String []args) { System.out.println(\"Hello World\"); } } {{\u003c /typeit \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:10:2","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"10.3 Group Content All typing animations start at the same time by default. But sometimes you may want to start a set of typeit contents in order. A set of typeit contents with the same value of named parameter group will start typing animation in sequence. Example typeit input with group: {{\u003c typeit group=paragraph \u003e}} **First** this paragraph begins {{\u003c /typeit \u003e}} {{\u003c typeit group=paragraph \u003e}} **Then** this paragraph begins {{\u003c /typeit \u003e}} The rendered output looks like this: ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:10:3","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":["documentation"],"content":"11 script script is a shortcode to insert custom  Javascript in your post. Remarque The script content can be guaranteed to be executed in order after all third-party libraries are loaded. So you are free to use third-party libraries. Example script input: {{\u003c script \u003e}} console.log('Hello LoveIt!'); {{\u003c /script \u003e}} You can see the output in the console of the developer tool. ","date":"2020-03-03","objectID":"/julie-hartz/fr/theme-documentation-extended-shortcodes/:11:0","tags":["shortcodes"],"title":"Thème Documentation - Extended Shortcodes","uri":"/julie-hartz/fr/theme-documentation-extended-shortcodes/"},{"categories":null,"content":"    ","date":"2019-08-02","objectID":"/julie-hartz/fr/about/:0:0","tags":null,"title":"À propos","uri":"/julie-hartz/fr/about/"},{"categories":null,"content":"Bonjour!👋   Je suis Data Scientist Junior, ayant soif d’apprendre et d’améliorer mes compétences en Data Science 💻 au fil des projets que j’entreprends. Je suis diplômée d’un Master de Recherche en Astrobiologie 👽 et Statistiques  de l’Université Macquarie, Sydney, Australie. J’ai récemment enrichi mes compétences quantitatives avec la Data Science au cours de 10-semaines de bootcamp à l’école de coding Le Wagon 👾 en Suisse, mon pays d’origine🇨🇭. Constamment, je cherche à avoir un impact positif sur mon entourage, au travers de projets associatifs notamment dans l’éducation📚. Selon moi la Data Science est la clé🔑 pour comprendre le monde dans lequel nous vivons, et ainsi devenir de meilleur.e.s co-locataires🌏.     💙💙💙💙💙💙💙💙💙💙💙💙💙💙💙💙💙💙💙 ","date":"2019-08-02","objectID":"/julie-hartz/fr/about/:0:1","tags":null,"title":"À propos","uri":"/julie-hartz/fr/about/"}]